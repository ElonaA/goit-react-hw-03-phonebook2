{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","reset","setState","onSubmitContactForm","e","preventDefault","props","onSubmit","onChangeContactFormName","target","value","match","toast","error","onChangeContactFormNumber","validity","valid","this","className","s","inner","form","label","type","placeholder","onChange","input","pattern","button","Component","Filter","filter","onChangeFilter","uniqId","uuidv4","id","ContactList","data","onDeleteButton","list","map","item","onClick","App","contacts","handleChange","handleSubmit","find","prevState","handleFilter","handleDelete","idData","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","length","filteredContacts","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd2116e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__lPyP0\",\"list\":\"ContactList_list__VWSax\",\"button\":\"ContactList_button__3ND5X\"};","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n  \r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n\r\n  static propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  } \r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  \r\n  onSubmitContactForm = e => {\r\n    e.preventDefault();\r\n    \r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n onChangeContactFormName = e => {\r\n    const { name, value } = e.target;\r\n   if (e.target.value.match(\"^[a-zA-Z ]*$\") != null) {\r\n     this.setState({\r\n       [name]: value,\r\n     })\r\n   }\r\n   else {\r\n     toast.error(\"Enter just letters, please\");\r\n       }\r\n  \r\n  };\r\n\r\n  onChangeContactFormNumber = e => {\r\n     const { name, value } = e.target;\r\n     \r\n    if (e.target.validity.valid) {\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n    else {\r\n     toast.error(\"Enter the correct phone number\");\r\n       }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div className={s.inner}>\r\n        <form className={s.form} onSubmit={this.onSubmitContactForm}>\r\n          <label className={s.label}>\r\n            Name\r\n          <input\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChangeContactFormName}\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Phone\r\n          <input\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              placeholder=\"Enter Phone Number\"\r\n              value={number}\r\n              pattern=\"[0-9]*\"\r\n              onChange={this.onChangeContactFormNumber}\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>Add contacts</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\nfunction Filter({ filter, onChangeFilter }) {\r\n  const uniqId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.inner}>\r\n      \r\n      <label className={s.label}>\r\n        Find contact\r\n      </label>\r\n      <input\r\n        name=\"filter\"\r\n        placeholder=\"Enter search word...\"\r\n        filter={filter}\r\n        onChange={e => {onChangeFilter(e.target.value);\r\n          }}\r\n        id={uniqId}\r\n        className={s.input}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ data, onDeleteButton }) {\r\n  return (\r\n\r\n    <ul className={s.list}>\r\n      {data.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          üôÇ {name}   ‚Äî  üìû {number}\r\n          <button id={id} className={s.button} onClick={() => onDeleteButton(id)}>\r\n          ‚ùå\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\n\r\nimport {ToastContainer, toast} from 'react-toastify';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: ''\r\n  }\r\n   \r\n\r\n  handleChange = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleSubmit = data => {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts.find(({ name }) => name === data.name)) {\r\n      toast.error(`Oh. no! ${data.name} is already exist in phonebook`);\r\n      return;\r\n    }\r\n      \r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [\r\n          ...prevState.contacts,\r\n          {\r\n            id: uuidv4(),\r\n            name: data.name,\r\n            number: data.number,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n  };\r\n\r\n  handleFilter = filter => {\r\n    this.setState({\r\n      filter,\r\n    });\r\n  };\r\n\r\n  handleDelete = idData => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== idData),\r\n      };\r\n    });\r\n  };\r\n\r\n  filteredContacts () {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(data =>\r\n      data.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\ncomponentDidMount() {\r\n\r\n    const contacts = localStorage.getItem('Contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('Contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Phonebook</h1>\r\n        <ContactForm onSubmit={this.handleSubmit} />\r\n\r\n        \r\n        {contacts.length > 1 && (\r\n          <Filter filter={filter} onChangeFilter={this.handleFilter} />\r\n        )}\r\n        <ContactList data={this.filteredContacts()} onDeleteButton={this.handleDelete} />\r\n\r\n        <ToastContainer autoClose={3000} />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"ContactForm_inner__1uo6i\",\"button\":\"ContactForm_button__2uLuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Filter_inner__2mrji\",\"label\":\"Filter_label__2hbV0\"};"],"sourceRoot":""}